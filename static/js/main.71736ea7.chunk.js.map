{"version":3,"sources":["firebase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","handleChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onChange","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","stypes","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","alt","width","height","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.71736ea7.chunk.js","sourcesContent":["import firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,     \n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n\nfirebase.initializeApp(firebaseConfig)\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import { useState } from \"react\";\nimport { authService } from \"../firebase\";\n\n\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n\n\n  const handleChange = (event) => {\n    const {target: {name, value}} = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\"){\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      if (newAccount) {\n      //create account\n      await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n      //login\n      await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev)\n\n  return(\n    <>\n    <form onSubmit={onSubmit} className=\"container\">\n      <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={handleChange} className=\"authInput\" />\n      <input name=\"password\" value={password} onChange={handleChange} type=\"password\" placeholder=\"Password\" required className=\"authInput\"  />\n      <input type=\"submit\" value={newAccount? \"create account\" : \"Log in\"} className=\"authInput authSubmit\" />\n      {error && <span className=\"authError\">{error}</span>}\n    </form>\n    <span onClick={toggleAccount} className=\"authSwitch\" >\n      {newAccount? <button>Sign in</button> : <button>Create account</button> } \n    </span>\n    </>\n  );\n};\n\nexport default AuthForm;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter, faGoogle, faGithub,} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"../firebase\";\nimport AuthForm from \"../components/AuthForm\";\n\n\nconst Auth = () => {\n\n  const onSocialClick = async (event) => {\n    const {\n      target: {name},\n      } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon \n        icon={faTwitter}\n        color={\"04AAFF\"}\n        size=\"3x\"\n        stypes={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\" >\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">Login with Google <FontAwesomeIcon icon={faGoogle} /></button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">Login with Github <FontAwesomeIcon icon={faGithub} /></button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;","import { dbService, storageService } from \"../firebase\";\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\"\n\nconst Nweet = ({nweetObj, isOwner}) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure to delete?\");\n    // console.log(ok);\n    if (ok) {\n      // console.log(nweetObj.id);\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      // console.log(data); 위의 await문이 데이터였음\n      if (nweetObj.attachmentUrl !== \"\")\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  }; \n\n  const toggleEditing = () => setEditing((prev) => !prev); \n\n  const onChange = (event) => {\n    const {target: {value},\n  } = event;\n  setNewNweet(value);\n  }; \n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    // console.log(nweetObj.id, newNweet);\n    await dbService.doc(`nweets/${nweetObj.id}`).update({text: newNweet});\n    setEditing(false);\n  };\n\n  return(\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input onChange={onChange} value={newNweet} required placeholder=\"Edit your nweet\" autoFocus className=\"formBtn cancel Btn\" />\n            <input type=\"submit\" value=\"Update Nweet\" />\n          </form>\n          <button onClick={toggleEditing}>Cancel</button>\n        </>\n      ): (\n        <>\n         <h4>{nweetObj.text}</h4>\n         {nweetObj.attachmentUrl && (\n           <img src={nweetObj.attachmentUrl} alt=\"attachment\" width=\"80px\" height=\"80px\" />\n         )}\n         {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}><FontAwesomeIcon icon={faTrash} /></span>\n              <span onClick={toggleEditing}><FontAwesomeIcon icon={faPencilAlt} /></span>\n            </div> \n          // <button onClick={onDeleteClick}>Delete Nweet</button> \n          // <button onClick ={toggleEditing}>Edit Nweet</button>\n          )}\n        </>\n      )}  \n    </div>\n  );\n};\n\nexport default Nweet;","import { useState } from \"react\";\nimport { dbService, storageService } from \"../firebase\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst NweetFactory = ({userObj}) => {\n\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit= async (event) => {\n    event.preventDefault();\n    if (nweet === \"\"){\n      return;\n    }\n    let attachmentUrl=\"\";\n    if (attachment !== \"\"){ \n    const attachmentRef = storageService\n    .ref()\n    .child(`${userObj.uid}/${uuidv4()}`);   \n    const response = await attachmentRef.putString(attachment, \"data_url\");\n    attachmentUrl = await response.ref.getDownloadURL()};\n    await dbService.collection(\"nweets\").add({\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    });\n    setNweet(\"\");\n  };\n\n  const onChange=(event) => {\n    event.preventDefault();\n    const {target: {value},} = event;\n    setNweet(value);\n  }\n\n  const onFileChange = (event) => {\n    const {target: {files},\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: {result},\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment(\"\");\n\n return (\n  <form onSubmit={onSubmit} className=\"factoryForm\">\n    <div className=\"factoryInput__container\">\n      <input className=\"factoryInput__input\" value={nweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120} />\n      <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n    </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\" >\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input id=\"attach-file\" type=\"file\" accept=\"image/*\" onChange={onFileChange} style={{ opacity:0, }} /> \n      {/* <input type=\"submit\" value=\"Nweet\"/> */}\n      {attachment && (\n      <div className=\"factoryForm__attachment\" >\n        <img src={attachment} style={{backgroundImage: attachment}} alt=\"new-attach\" />\n        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n          <span>Remove</span>\n          <FontAwesomeIcon icon={faTimes} />\n        </div>\n      </div>\n\n \n    )}\n</form>)\n};\n\nexport default NweetFactory;","import { dbService } from \"../firebase\";\nimport { useEffect, useState } from \"react\";\nimport Nweet from \"../components/Nweet\";\nimport NweetFactory from \"../components/NweetFactory\";\n\n\nconst Home = ({userObj}) => {\n\n  const [nweets, setNweets] = useState([]);\n\n  //get을 이용해서 nweet 보여주기\n  // const getNweets = async() => {\n  //   const dbNweets = await dbService.collection(\"nweets\").get();\n  //   dbNweets.forEach((document) => {\n  //     const nweetObject = { ...document.data(), id:document.id };\n  //     setNweets((prev) => [nweetObject, ...prev])\n  //   });\n  // };\n\n  //온스냅샷 함수\n  useEffect(() => {\n    dbService.collection(\"nweets\")\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n      const newArray = snapshot.docs.map((document) => ({\n        id: document.id,\n        ...document.data(),\n      }));\n      setNweets(newArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\" >\n      <NweetFactory userObj={userObj} /> \n      <div style={{ marginTop: 30 }}>\n      {nweets.map((nweet) => (\n        <Nweet key={nweet.id} \n        nweetObj={nweet}\n        isOwner={nweet.creatorId === userObj.uid} \n        />\n      ))}\n      </div> \n    </div>\n  );\n};\n\nexport default Home;","import { authService  } from \"../firebase\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] =useState(userObj.displayName);\n\n  const onLogOutClick = () => { \n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = (event) => {\n    const {target: {value},\n  } = event;\n  setNewDisplayName(value);\n  }\n\n  const onSubmit =async (event) => {\n    event.preventDefault();\n    // userObj.updateProfile()\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({ displayName: newDisplayName });\n      refreshUser();\n    }\n    setNewDisplayName(\"\");\n  };\n\n  // const getMyNweets = async() => {\n  //   const nweets = await dbService\n  //   .collection(\"nweets\")\n  //   .where(\"creatorId\", \"==\", userObj.uid)\n  //   .orderBy(\"createdAt\", \"asc\")\n  //   .get();\n\n  //   console.log(nweets.docs.map((doc) => doc.data()));\n  // };\n\n  // useEffect(() => {\n  //   getMyNweets()\n  // }, []);\n\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input onChange={onChange} type=\"text\" placeholder=\"Display name\" value={newDisplayName} autoFocus className=\"formInput\"/>\n        <input type=\"submit\" value=\"Update profile\" className=\"formBtn\" style={{ marginTop: 10}} />\n      </form>\n      {/* <button onClick={onLogOutClick}>Log out</button> */}\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log out\n      </span>\n    </div>\n  )\n};\n\nexport default Profile;","import { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n \nconst Navigation = ({userObj}) => {\n  return (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size= \"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link to=\"/profile\"\n        style={{ \n          marginLeft: 10,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          fontSize: 12\n        }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size= \"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName? `${userObj.displayName}'s profile'` : \"Profile\"}\n          </span>\n          </Link>\n      </li>\n    </ul>\n  </nav>\n  );\n};\n\nexport default Navigation;","import { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\";\nimport Navigation from \"./Navigation\";\n\n\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n\n  return(\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj}/>}\n      <Switch>    \n         {isLoggedIn? (\n           <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\"\n            }}>\n           <Route exact path= \"/\">\n             <Home userObj={userObj}/>\n           </Route> \n           <Route exact path=\"/profile\">\n             <Profile refreshUser={refreshUser} userObj={userObj} />\n           </Route>\n           </div>\n         ) : (\n           <Route exact path= \"/\">\n             <Auth />\n           </Route>\n         )}\n         <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService }from \"../firebase\";\n\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false); \n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    // setUserObj(authService.currentUser);\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return(\n  <>\n  {init? (<AppRouter refreshUser={refreshUser} isLoggedIn = {Boolean(userObj)} userObj = {userObj}/> ) : (\"initializing...\")} \n  </>)\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}