{"version":3,"sources":["firebase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","handleChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onChange","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","alt","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"yNAcAA,IAASC,cATc,CACrBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,eACnBK,MAAOL,8CAKF,IAAMM,EAAmBT,IAEnBU,EAAcV,IAASW,OACvBC,EAAYZ,IAASa,YACrBC,EAAiBd,IAASe,U,OCmCxBC,EAlDE,WACf,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAIMC,EAAe,SAACC,GACpB,MAAgCA,EAAzBC,OAASC,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,MAET,UAATD,EACFV,EAASW,GACS,aAATD,GACTR,EAAYS,IAIVC,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACfL,EAAMM,iBADS,UAGTX,EAHS,gCAKPZ,EAAYwB,+BAA+BhB,EAAOE,GAL3C,6CAQPV,EAAYyB,2BAA2BjB,EAAOE,GARvC,yDAWbK,EAAS,KAAMW,SAXF,0DAAH,sDAiBd,OACE,qCACA,uBAAML,SAAUA,EAAhB,UACE,uBAAOF,KAAK,QAAQQ,KAAK,OAAOC,YAAY,QAAQC,UAAQ,EAACT,MAAOZ,EAAOsB,SAAUd,IACrF,uBAAOG,KAAK,WAAWC,MAAOV,EAAUoB,SAAUd,EAAcW,KAAK,WAAWC,YAAY,WAAWC,UAAQ,IAC/G,uBAAOF,KAAK,SAASP,MAAOR,EAAY,iBAAmB,WAC1DE,KAEH,sBAAMiB,QAVc,kBAAMlB,GAAc,SAACmB,GAAD,OAAWA,MAUnD,SACGpB,EAAY,6CAA2B,0DClB/BqB,EA1BF,WAEX,IAAMC,EAAa,uCAAG,WAAOjB,GAAP,iBAAAK,EAAA,4DAKP,YAHFH,EACLF,EADJC,OAASC,MAITgB,EAAW,IAAIpC,EAAiBE,KAAKmC,mBACnB,WAATjB,IACTgB,EAAW,IAAIpC,EAAiBE,KAAKoC,oBARnB,SAUDrC,EAAYsC,gBAAgBH,GAV3B,yDAAH,sDAanB,OACE,gCACE,cAAC,EAAD,IACA,gCACE,wBAAQJ,QAASG,EAAef,KAAK,SAArC,+BACA,wBAAQY,QAASG,EAAef,KAAK,SAArC,sC,QCsCOoB,EA5DD,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,QACxB,EAA8BlC,oBAAS,GAAvC,mBAAOmC,EAAP,KAAgBC,EAAhB,KACA,EAAgCpC,mBAASiC,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAGMC,EAAa,uCAAG,sBAAAzB,EAAA,0DACT0B,OAAOC,QAAQ,2BADN,gCAKZ/C,EAAUgD,IAAV,iBAAwBV,EAASW,KAAMC,SAL3B,UAOa,KAA3BZ,EAASa,cAPK,gCAQVjD,EAAekD,WAAWd,EAASa,eAAeD,SARxC,2CAAH,qDAYbG,EAAgB,kBAAMZ,GAAW,SAACX,GAAD,OAAWA,MAQ5CX,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACfL,EAAMM,iBADS,SAGTrB,EAAUgD,IAAV,iBAAwBV,EAASW,KAAMK,OAAO,CAACZ,KAAMC,IAH5C,OAIfF,GAAW,GAJI,2CAAH,sDAOd,OACE,8BACGD,EACC,qCACE,uBAAMrB,SAAUA,EAAhB,UACE,uBAAOS,SAlBA,SAACb,GAChB,IAAgBG,EACdH,EADKC,OAASE,MAElB0B,EAAY1B,IAeyBA,MAAOyB,EAAUhB,UAAQ,IACpD,uBAAOF,KAAK,SAASP,MAAM,oBAE7B,wBAAQW,QAASwB,EAAjB,uBAGF,qCACC,6BAAKf,EAASI,OACbJ,EAASa,eACR,qBAAKI,IAAKjB,EAASa,cAAeK,IAAI,aAAaC,MAAM,OAAOC,OAAO,SAExEnB,GACA,qCACA,wBAAQV,QAASgB,EAAjB,0BACA,wBAAQhB,QAAUwB,EAAlB,iC,QCUKM,EA3DM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAErB,EAA0BvD,mBAAS,IAAnC,mBAAOwD,EAAP,KAAcC,EAAd,KACA,EAAoCzD,mBAAS,IAA7C,mBAAO0D,EAAP,KAAmBC,EAAnB,KAEM7C,EAAQ,uCAAE,WAAOJ,GAAP,mBAAAK,EAAA,yDACdL,EAAMM,iBACF8B,EAAc,GACC,KAAfY,EAHU,wBAIRE,EAAgB/D,EACrBgE,MACAC,MAFqB,UAEZP,EAAQQ,IAFI,YAEGC,gBANX,SAOSJ,EAAcK,UAAUP,EAAY,YAP7C,cAORQ,EAPQ,gBAQQA,EAASL,IAAIM,iBARrB,OAQdrB,EARc,gCASRnD,EAAUyE,WAAW,UAAUC,IAAI,CACvChC,KAAMmB,EACNc,UAAWC,KAAKC,MAChBC,UAAWlB,EAAQQ,IACnBjB,kBAbY,QAedW,EAAS,IAfK,4CAAF,sDAwCf,OACC,uBAAM3C,SAAUA,EAAhB,UACA,uBAAOD,MAAO2C,EAAOjC,SAxBN,SAACb,GACdA,EAAMM,iBACN,IAAgBH,EAAWH,EAApBC,OAASE,MAChB4C,EAAS5C,IAqB8BO,KAAK,OAAOC,YAAY,uBAAuBqD,UAAW,MACnG,uBAAOtD,KAAK,OAAOuD,OAAO,UAAUpD,SAnBf,SAACb,GACpB,IAEMkE,EADFlE,EADGC,OAASkE,MAEM,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAClB,IACkBC,EACdD,EADFE,cAAgBD,OAElBvB,EAAcuB,IAEhBJ,EAAOM,cAAcR,MASvB,uBAAOxD,KAAK,SAASP,MAAM,UACxB6C,GACD,gCACE,qBAAKR,IAAKQ,EAAYP,IAAI,OAAOC,MAAM,OAAOC,OAAO,SACrD,wBAAQ7B,QAVc,kBAAMmC,EAAc,KAU1C,0BCfS0B,EArCF,SAAC,GAAe,IAAd9B,EAAa,EAAbA,QAEb,EAA4BvD,mBAAS,IAArC,mBAAOsF,EAAP,KAAeC,EAAf,KAsBA,OAVAC,qBAAU,WACR7F,EAAUyE,WAAW,UAAUqB,YAAW,SAACC,GACzC,IAAMC,EAAWD,EAASE,KAAKC,KAAI,SAACC,GAAD,oBACjClD,GAAIkD,EAASlD,IACVkD,EAASC,WAEdR,EAAUI,QAEX,IAGD,qCACE,cAAC,EAAD,CAAcpC,QAASA,IACtB+B,EAAOO,KAAI,SAACrC,GAAD,OACV,cAAC,EAAD,CACAvB,SAAUuB,EACVtB,QAASsB,EAAMiB,YAAclB,EAAQQ,KAFzBP,EAAMZ,WCqBXoD,EAnDC,SAAC,GAA8B,IAA5BzC,EAA2B,EAA3BA,QAAS0C,EAAkB,EAAlBA,YACpBC,EAAUC,cAChB,EAA2CnG,mBAASuD,EAAQ6C,aAA5D,mBAAOC,EAAP,KAAuBC,EAAvB,KAaMxF,EAAQ,uCAAE,WAAOJ,GAAP,SAAAK,EAAA,yDACdL,EAAMM,iBAEFuC,EAAQ6C,cAAgBC,EAHd,gCAIN9C,EAAQgD,cAAc,CAAEH,YAAaC,IAJ/B,OAKZJ,IALY,OAOdK,EAAkB,IAPJ,2CAAF,sDAyBd,OACE,qCACE,uBAAMxF,SAAUA,EAAhB,UACE,uBAAOS,SAlCI,SAACb,GAChB,IAAgBG,EACdH,EADKC,OAASE,MAElByF,EAAkBzF,IA+BeO,KAAK,OAAOC,YAAY,eAAeR,MAAOwF,IACzE,uBAAOjF,KAAK,SAASP,MAAM,sBAE7B,wBAAQW,QA1CU,WACpB/B,EAAY+G,UACZN,EAAQO,KAAK,MAwCX,yBCjCSC,EAfI,SAAC,GAAe,IAAdnD,EAAa,EAAbA,QACnB,OACA,8BACE,+BACE,6BACE,cAAC,IAAD,CAAMoD,GAAG,IAAT,oBAEF,6BACE,eAAC,IAAD,CAAMA,GAAG,WAAT,UAAqBpD,EAAQ6C,YAA7B,wBCwBOQ,EA1BG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,WAAYtD,EAA2B,EAA3BA,QAAS0C,EAAkB,EAAlBA,YAExC,OACE,eAAC,IAAD,WACGY,GAAc,cAAC,EAAD,CAAYtD,QAASA,IACpC,eAAC,IAAD,WACIsD,EACC,qCACA,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,IAAnB,SACE,cAAC,EAAD,CAAMxD,QAASA,MAEjB,cAAC,IAAD,CAAOuD,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,CAASd,YAAaA,EAAa1C,QAASA,SAI9C,cAAC,IAAD,CAAOuD,OAAK,EAACC,KAAM,IAAnB,SACE,cAAC,EAAD,MAGJ,cAAC,IAAD,CAAUC,KAAK,IAAIL,GAAG,aCYhBM,MAnCf,WACE,MAAwBjH,oBAAS,GAAjC,mBAAOkH,EAAP,KAAaC,EAAb,KACA,EAA8BnH,mBAAS,MAAvC,mBAAOuD,EAAP,KAAgB6D,EAAhB,KA2BA,OAzBA5B,qBAAU,WACR/F,EAAY4H,oBAAmB,SAACC,GAE5BF,IADEE,GACS,CACTvD,IAAKuD,EAAKvD,IACVqC,YAAakB,EAAKlB,YAClBG,cAAe,SAACgB,GAAD,OAAUD,EAAKf,cAAcgB,MAKhDJ,GAAQ,QAET,IAaH,mCACCD,EAAO,cAAC,EAAD,CAAWjB,YAZC,WAElB,IAAMqB,EAAO7H,EAAY+H,YACzBJ,EAAW,CACTrD,IAAKuD,EAAKvD,IACVqC,YAAakB,EAAKlB,YAClBG,cAAe,SAACgB,GAAD,OAAUD,EAAKf,cAAcgB,OAMHV,WAAcY,QAAQlE,GAAUA,QAAWA,IAAgB,qBChC1GmE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9B,SAAS+B,eAAe,W","file":"static/js/main.6fa9c6a1.chunk.js","sourcesContent":["import firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,     \n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n\nfirebase.initializeApp(firebaseConfig)\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import { useState } from \"react\";\nimport { authService } from \"../firebase\";\n\n\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n\n\n  const handleChange = (event) => {\n    const {target: {name, value}} = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\"){\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      if (newAccount) {\n      //create account\n      await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n      //login\n      await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev)\n\n  return(\n    <>\n    <form onSubmit={onSubmit}>\n      <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={handleChange} />\n      <input name=\"password\" value={password} onChange={handleChange} type=\"password\" placeholder=\"Password\" required />\n      <input type=\"submit\" value={newAccount? \"create account\" : \"Log in\"} />\n      {error}\n    </form>\n    <span onClick={toggleAccount}>\n      {newAccount? <button>Sign in</button> : <button>Create account</button> } \n    </span>\n    </>\n  );\n};\n\nexport default AuthForm;","import { authService, firebaseInstance } from \"../firebase\";\nimport { useState } from \"react\"; \nimport AuthForm from \"../components/AuthForm\";\n\n\nconst Auth = () => {\n\n  const onSocialClick = async (event) => {\n    const {\n      target: {name},\n      } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div>\n      <AuthForm />\n      <div>\n        <button onClick={onSocialClick} name=\"google\">Login with Google</button>\n        <button onClick={onSocialClick} name=\"github\">Login with Github</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;","import { dbService, storageService } from \"../firebase\";\nimport { useState } from \"react\";\n\nconst Nweet = ({nweetObj, isOwner}) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure to delete?\");\n    // console.log(ok);\n    if (ok) {\n      // console.log(nweetObj.id);\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      // console.log(data); 위의 await문이 데이터였음\n      if (nweetObj.attachmentUrl !== \"\")\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  }; \n\n  const toggleEditing = () => setEditing((prev) => !prev); \n\n  const onChange = (event) => {\n    const {target: {value},\n  } = event;\n  setNewNweet(value);\n  }; \n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    // console.log(nweetObj.id, newNweet);\n    await dbService.doc(`nweets/${nweetObj.id}`).update({text: newNweet});\n    setEditing(false);\n  };\n\n  return(\n    <div>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input onChange={onChange} value={newNweet} required />\n            <input type=\"submit\" value=\"Update Nweet\" />\n          </form>\n          <button onClick={toggleEditing}>Cancel</button>\n        </>\n      ): (\n        <>\n         <h4>{nweetObj.text}</h4>\n         {nweetObj.attachmentUrl && (\n           <img src={nweetObj.attachmentUrl} alt=\"attachment\" width=\"80px\" height=\"80px\" />\n         )}\n         {isOwner &&  (\n          <>\n          <button onClick={onDeleteClick}>Delete Nweet</button> \n          <button onClick ={toggleEditing}>Edit Nweet</button>\n          </>\n          )}\n        </>\n      )}  \n    </div>\n  );\n};\n\nexport default Nweet;","import { useState } from \"react\";\nimport { dbService, storageService } from \"../firebase\";\nimport { v4 as uuidv4 } from 'uuid';\n\n\nconst NweetFactory = ({userObj}) => {\n\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit= async (event) => {\n    event.preventDefault();\n    let attachmentUrl=\"\";\n    if (attachment !== \"\"){ \n    const attachmentRef = storageService\n    .ref()\n    .child(`${userObj.uid}/${uuidv4()}`);   \n    const response = await attachmentRef.putString(attachment, \"data_url\");\n    attachmentUrl = await response.ref.getDownloadURL()};\n    await dbService.collection(\"nweets\").add({\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    });\n    setNweet(\"\");\n  };\n\n  const onChange=(event) => {\n    event.preventDefault();\n    const {target: {value},} = event;\n    setNweet(value);\n  }\n\n  const onFileChange = (event) => {\n    const {target: {files},\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: {result},\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment(\"\");\n\n return (\n  <form onSubmit={onSubmit}>\n  <input value={nweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120} />\n  <input type=\"file\" accept=\"image/*\" onChange={onFileChange} /> \n  <input type=\"submit\" value=\"Nweet\"/>\n    {attachment && (\n    <div>\n      <img src={attachment} alt=\"show\" width=\"50px\" height=\"50px\"/>\n      <button onClick={onClearAttachment}>Clear</button>\n    </div>\n    )}\n</form>)\n};\n\nexport default NweetFactory;","import { dbService } from \"../firebase\";\nimport { useEffect, useState } from \"react\";\nimport Nweet from \"../components/Nweet\";\nimport NweetFactory from \"../components/NweetFactory\";\n\n\nconst Home = ({userObj}) => {\n\n  const [nweets, setNweets] = useState([]);\n\n  //get을 이용해서 nweet 보여주기\n  // const getNweets = async() => {\n  //   const dbNweets = await dbService.collection(\"nweets\").get();\n  //   dbNweets.forEach((document) => {\n  //     const nweetObject = { ...document.data(), id:document.id };\n  //     setNweets((prev) => [nweetObject, ...prev])\n  //   });\n  // };\n\n  //온스냅샷 함수\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const newArray = snapshot.docs.map((document) => ({\n        id: document.id,\n        ...document.data(),\n      }));\n      setNweets(newArray);\n    });\n  }, []);\n\n  return (\n    <>\n      <NweetFactory userObj={userObj} /> \n      {nweets.map((nweet) => (\n        <Nweet key={nweet.id} \n        nweetObj={nweet}\n        isOwner={nweet.creatorId === userObj.uid} \n        />\n      ))}\n    </>\n  );\n};\n\nexport default Home;","import { authService  } from \"../firebase\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] =useState(userObj.displayName);\n\n  const onLogOutClick = () => { \n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = (event) => {\n    const {target: {value},\n  } = event;\n  setNewDisplayName(value);\n  }\n\n  const onSubmit =async (event) => {\n    event.preventDefault();\n    // userObj.updateProfile()\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({ displayName: newDisplayName });\n      refreshUser();\n    }\n    setNewDisplayName(\"\");\n  };\n\n  // const getMyNweets = async() => {\n  //   const nweets = await dbService\n  //   .collection(\"nweets\")\n  //   .where(\"creatorId\", \"==\", userObj.uid)\n  //   .orderBy(\"createdAt\", \"asc\")\n  //   .get();\n\n  //   console.log(nweets.docs.map((doc) => doc.data()));\n  // };\n\n  // useEffect(() => {\n  //   getMyNweets()\n  // }, []);\n\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input onChange={onChange} type=\"text\" placeholder=\"Display name\" value={newDisplayName} />\n        <input type=\"submit\" value=\"Update profile\" />\n      </form>\n      <button onClick={onLogOutClick}>Log out</button>\n    </>\n  )\n};\n\nexport default Profile;","import { Link } from \"react-router-dom\";\n \nconst Navigation = ({userObj}) => {\n  return (\n  <nav>\n    <ul>\n      <li>\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li>\n        <Link to=\"/profile\">{userObj.displayName}'s Profile</Link>\n      </li>\n    </ul>\n  </nav>\n  );\n};\n\nexport default Navigation;","import { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\";\nimport Navigation from \"./Navigation\";\n\n\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n\n  return(\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj}/>}\n      <Switch>    \n         {isLoggedIn? (\n           <>\n           <Route exact path= \"/\">\n             <Home userObj={userObj}/>\n           </Route> \n           <Route exact path=\"/profile\">\n             <Profile refreshUser={refreshUser} userObj={userObj} />\n           </Route>\n           </>\n         ) : (\n           <Route exact path= \"/\">\n             <Auth />\n           </Route>\n         )}\n         <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService }from \"../firebase\";\n\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false); \n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    // setUserObj(authService.currentUser);\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return(\n  <>\n  {init? (<AppRouter refreshUser={refreshUser} isLoggedIn = {Boolean(userObj)} userObj = {userObj}/> ) : (\"initializing...\")} \n  </>)\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}